The `7-base_geometry` module
======================

Using `BaseGeometryÂ´
-------------------

     >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg = BaseGeometry(None)
Traceback (most recent call last):
TypeError: object() takes no parameters
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("age", )
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("age", 12, 12)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("age", 12.56)
Traceback (most recent call last):
TypeError: age must be an integer
>>> bg.integer_validator("age", -12.56)
Traceback (most recent call last):
TypeError: age must be an integer
>>> bg.integer_validator("age", 1e300)
Traceback (most recent call last):
TypeError: age must be an integer
>>> bg.integer_validator("age", [1, 2])
Traceback (most recent call last):
TypeError: age must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0
>>> bg.integer_validator("age", -1)
Traceback (most recent call last):
ValueError: age must be greater than 0
